"""create generation table

Revision ID: 486b530add52
Revises: 
Create Date: 2024-06-03 22:42:25.157368

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "486b530add52"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "generation",
        sa.Column("uid", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "created",
                "in_progress",
                "finished",
                "failed",
                name="generationstatus",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.Column(
            "meta",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="{}",
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("generation")
    sa.Enum(name="generationstatus").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
